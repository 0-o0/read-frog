name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install
        shell: bash

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          commit: 'chore(release): version packages'
          title: 'chore(release): version packages'
          publish: pnpm run release
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest tag
        if: steps.changesets.outputs.published == 'true'
        id: tag
        run: echo "TAG=$(git describe --abbrev=0 --tags)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release (auto notes)
        if: steps.changesets.outputs.published == 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.TAG }}
          generateReleaseNotes: true
          omitBody: true

      - name: Send Discord Notification
        if: steps.changesets.outputs.published == 'true'
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "embeds": [{
                   "title": "ðŸŽ‰ New Release Published!",
                   "description": "**${{ github.repository }}** has published a new release `${{ steps.tag.outputs.TAG }}`",
                   "url": "https://github.com/${{ github.repository }}/releases/tag/${{ steps.tag.outputs.TAG }}",
                   "color": 48253,
                   "fields": [
                     {
                       "name": "Version",
                       "value": "`${{ steps.tag.outputs.TAG }}`",
                       "inline": true
                     },
                     {
                       "name": "Repository",
                       "value": "[${{ github.repository }}](https://github.com/${{ github.repository }})",
                       "inline": true
                     }
                   ],
                   "footer": {
                     "text": "GitHub Actions",
                     "icon_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
                   },
                   "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
                 }]
               }' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
